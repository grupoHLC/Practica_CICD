stages:
  - build
  - test
  - release
  - deploy

build-job:
  image: node:latest
  stage: build
  script:
    - npm install
    - ls -lha node_modules/

 test-job:
   image: node:latest
   stage: test
   script:
    - npm install
    - npm run test:calculator

release-prod-job:
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  stage: release
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  only:
    - main

deploy-prod-job:
  stage: deploy
  before_script:
   - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
   - eval $(ssh-agent -s)
   - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
   - mkdir -p ~/.ssh
   - chmod 700 ~/.ssh
   - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
   - chmod 644 ~/.ssh/known_hosts

  script:
    - scp -o StrictHostKeyChecking=no ./docker-compose.yml root@$VPS_DEPLOY:/root/ci-cd/docker-compose.yml
    - ssh -o StrictHostKeyChecking=no root@$VPS_DEPLOY "cd /root/ci-cd && docker image rm -f grupohlc/app_build:main && docker-compose down && docker-compose up -d"
  only:
    - main

deploy-dev-job:
  stage: deploy
  before_script:
   - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
   - eval $(ssh-agent -s)
   - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
   - mkdir -p ~/.ssh
   - chmod 700 ~/.ssh
   - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
   - chmod 644 ~/.ssh/known_hosts
  script:
  - ssh -o StrictHostKeyChecking=no root@$VPS_DEPLOY "cd /var/www/ci-cd/ && sh ./borrarcarpeta.sh && git clone $GIT_REPOSITORY proyecto_HLC_CICD"
  only:
    - develop



